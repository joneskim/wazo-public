name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run tests
      run: |
        cd backend
        npm test
        
    - name: Build application
      run: |
        cd backend
        npm run build
        
    - name: Create deployment package
      run: |
        cd backend
        tar -czf deploy.tar.gz \
          dist/ \
          package.json \
          package-lock.json \
          prisma/schema.prisma \
          .env.production
          
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        
        cd backend
        scp -i private_key.pem -o StrictHostKeyChecking=no \
          deploy.tar.gz ec2-user@$EC2_HOST:/home/ec2-user/app/
          
        ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@$EC2_HOST '
          cd /home/ec2-user/app
          
          # Backup the current database
          if [ -f "prisma/dev.db" ]; then
            echo "Backing up current database..."
            cp prisma/dev.db prisma/dev.db.backup
          fi
          
          tar -xzf deploy.tar.gz
          npm install --production
          
          # Stop the application before migration
          pm2 stop wazo-notes
          
          # Run database migrations
          npx prisma migrate deploy
          
          # Start the application
          pm2 restart wazo-notes || pm2 start dist/server.js --name "wazo-notes"
          
          # Keep last 5 database backups
          cd prisma
          ls -t dev.db.backup* | tail -n +6 | xargs rm -f 2>/dev/null
        '
        
    - name: Cleanup
      run: rm -f private_key.pem
